"""
    455~505, 640~703, 708~721
    
    문제상황 : 시간초과(+무한루프) -> 종료검사 - 종료검사로직 오타/오류
                                        return유무
    724 메모리 초과(10%)
        스택오버 플로우인 듯 하다.
        재귀를 얼마나 갔길래
        숫자가 작길래(50) 시간복잡도 문제 없을거라고 대충 생각했다.
        최악 1 -> 50 - 2의 50승만큼 재귀함수 - 2의 10승 = 10의 3승 -> 10의15승 
        
        10의 10승

        시간복잡도 계산을 코드 작성전에 '완벽하게'해야하는 이유 :
            로직을 바꿔야 될 수도 있다(많이 실수했는데도, 계속 잊어버리는 내용)
        '코드작성전 시간복잡도 계산안할시, 1시간 낭비 가능'
        
        재귀를 for문으로 바꾸기?
            len(t)까지 문자길이1부터 2,3,4,5,....len(t)까지 딕셔너리에 담는
            set으로 중복검사하고
            근데 그래도 시간초과인셈 아닌가? 시간이 길긴 길다 2초
            
    731 메모리 초과(11%)
        setrecurtionlimit을 걸고 해보라길래, 10%는 통과했지만 바로 11%에서 걸림
    
    755 
    t로 시작해서 BABA
    if 맨뒤에 A이면 -> A뺀애를 dfs
    if 맨앞에B이면, -> 앞B빼고 뒤집기 dfs

    풀로 다하면 10의 15승이지만, 중간에 발산 안하는 경우가 매우 많이 생기기 때문에, 시간 많이 줄여짐


"""
import sys
input = sys.stdin.readline

s = input().strip()
t = input().strip()

def dfs(cur) : #cur : 현재문자
    if len(cur) == len(s) :
        if cur == s : #s로 변환가능
            print(1)
            exit()
        return
    
    if cur[-1] == 'A' : #맨뒤에 A이면 -> A뺀애를 dfs
        dfs(cur[:-1])
    if cur[0] == 'B' : #맨앞에B이면, -> 앞B빼고 뒤집기 dfs
        dfs(cur[1:][::-1])
    
dfs(t)
print(0) 